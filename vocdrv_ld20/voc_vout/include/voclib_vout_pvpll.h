/*
 * Copyright (C) 2018 Socionext Inc.
 * All Rights Reserved.
 */

#ifndef INCLUDE_VOCLIB_VOUT_PVPLL_H_
#define INCLUDE_VOCLIB_VOUT_PVPLL_H_
#include "voclib_vout.h"
#include "voclib_vout_local.h"

#ifdef VOCLIB_SLD11
static const uint32_t I_scale[] = {
    115537131, //1
    301401213, //2
    414426668, //3
    489776972, //4
    600290750, //5
    786154832, //6
    899180287, //7
    1115184490, //8
    1228209946, //9
    1411562351, //10
    1524587806, //11
    1597426432, //12
    1710451888, //13
    1893804293, //14
    2006829748, //15
    2315765992u, //16
    2426279770u, //17
    2609632175u, //18
    2712610923u, //19
    2787961227u, //20
    2913545066u, //21
    3089362440u, //22
    3214946280u, //23
    3415880422u, //24
    3541464261u, //25
    3717281636u, //26
    3817748707u, //27
    3893099010u, //28
    4018682850u, //29
    4194500224u, //30
};
static const uint32_t kvco_scale[] = {
    441430359, //0
    803161476, //1
    1134245907, //2
    1441969502, //3
    1732318735, //4
    2011425341, //5
    2273040307u, //6
    2526799027u, //7
    2775027058u, //8
    3011900515u, //9
    3240877746u, //10
    3463911151u, //11
    3680287737u, //12
    3890600555u, //13
    4096069022u, //14
};
static const uint32_t kvco_maxth[] = {
    27134443 >> 16, //0
    49369825 >> 16, //1
    69721374 >> 16, //2
    88636948 >> 16, //3
    106484531 >> 16, //4
    123641036 >> 16, //5
    139722342 >> 16, //6
    155320729 >> 16, //7
    170579148 >> 16, //8
    185139609 >> 16, //9
    199214694 >> 16, //10
    212924416 >> 16, //11
    226224947 >> 16, //12
    239152742 >> 16, //13
    251782758 >> 16, //14
    264008908 >> 16, //15
};
static const uint32_t kvco_minth[] = {
    (19734140 >> 16) + 1, //0
    (35905327 >> 16) + 1, //1
    (50706454 >> 16) + 1, //2
    (64463235 >> 16) + 1, //3
    (77443295 >> 16) + 1, //4
    (89920754 >> 16) + 1, //5
    (101616249 >> 16) + 1, //6
    (112960530 >> 16) + 1, //7
    (124057562 >> 16) + 1, //8
    (134646988 >> 16) + 1, //9
    (144883414 >> 16) + 1, //10
    (154854120 >> 16) + 1, //11
    (164527234 >> 16) + 1, //12
    (173929267 >> 16) + 1, //13
    (183114733 >> 16) + 1, //14
    (192006479 >> 16) + 1, //15
};
static const uint32_t R_scale[] = {
    1567663063, //0
    1717986918, //1
    1911260446, //2
    2147483648u, //3
    2448131358u, //4
    2856153251u, //5
    3435973836u, //6
};
static const uint32_t f0_base_max = 150550600;
static const uint32_t f0_base_min = 131124716;
static const uint32_t zeta_base_max = 79628918;
static const uint32_t zeta_base_min = 67397916;

#else

static const uint32_t I_scale[] = {
    138547332, //1
    277094664, //2
    415641996, //3
    554189328, //4
    692736660, //5
    831283992, //6
    969831324, //7
    1108378657, //8
    1246925989, //9
    1385473321, //10
    1524020653, //11
    1662567985, //12
    1801115317, //13
    1939662649, //14
    2078209981, //15
    2216757314u, //16
    2355304646u, //17
    2493851978u, //18
    2632399310u, //19
    2770946642u, //20
    2909493974u, //21
    3048041306u, //22
    3186588638u, //23
    3325135971u, //24
    3463683303u, //25
    3602230635u, //26
    3740777967u, //27
    3879325299u, //28
    4017872631u, //29
    4156419963u, //30
};
static const uint32_t kvco_scale[] = {
    422604168, //0
    782210466, //1
    1115149962, //2
    1430372902, //3
    1730140020, //4
    2019351537, //5
    2297292968u, //6
    2564059355u, //7
    2634995085u, //8
    2891046992u, //9
    3142067221u, //10
    3383692716u, //11
    3619385267u, //12
    3849960554u, //13
    4075866371u, //14
};
static const uint32_t kvco_maxth[] = {
    26942704 >> 16, //0
    49869042 >> 16, //1
    71095265 >> 16, //2
    91191987 >> 16, //3
    110303338 >> 16, //4
    128741728 >> 16, //5
    146461605 >> 16, //6
    163469028 >> 16, //7
    167991464 >> 16, //8
    184315796 >> 16, //9
    200319339 >> 16, //10
    215723929 >> 16, //11
    230750271 >> 16, //12
    245450367 >> 16, //13
    259852765 >> 16, //14
    273821325 >> 16, //15
};
static const uint32_t kvco_minth[] = {
    (22257016 >> 16) + 1, //0
    (41196165 >> 16) + 1, //1
    (58730871 >> 16) + 1, //2
    (75332511 >> 16) + 1, //3
    (91120149 >> 16) + 1, //4
    (106351862 >> 16) + 1, //5
    (120990021 >> 16) + 1, //6
    (135039632 >> 16) + 1, //7
    (138775557 >> 16) + 1, //8
    (152260875 >> 16) + 1, //9
    (165481193 >> 16) + 1, //10
    (178206724 >> 16) + 1, //11
    (190619789 >> 16) + 1, //12
    (202763346 >> 16) + 1, //13
    (214660980 >> 16) + 1, //14
    (226200225 >> 16) + 1, //15
};
static const uint32_t R_scale[] = {
    1567663063, //0
    1717986918, //1
    1911260446, //2
    2147483648u, //3
    2448131358u, //4
    2856153251u, //5
    3435973836u, //6
};
static const uint32_t f0_base_max = 65434756;
static const uint32_t f0_base_min = 43623171;
static const uint32_t zeta_base_max = 40690656;
static const uint32_t zeta_base_min = 30270033;
#endif


static const uint32_t fvco_max = 3750;
static const uint32_t fvco_min = 1800;

struct voclib_vout_pvpll_param {
    int32_t pdiv;
    int32_t qdiv;
    uint32_t fdiv;
    uint32_t m;
    uint32_t k;
    uint32_t vco;
    uint32_t I;
    uint32_t R;
};
static const uint32_t divn_min = (19 << 20) + (1 << 19);
static const uint32_t divn_max = (54 << 20) + (1 << 19);



static const uint32_t th_9 = 3865470566u;

uint32_t voclib_vout_pvpll_calc(uint32_t tin_mul, uint32_t tin_div,
        uint32_t fout_mul, uint32_t fout_div, struct voclib_vout_pvpll_param *out, uint32_t t,
        uint32_t mode);

/*
 * src_mul/src_div x A/(result*2^(k)) = out_mul/out_div
 * result*(2^(k)) = src_mul*out_div *A/ (src_div*out_mul)
 */
static inline uint32_t voclib_vout_get_min_div(uint32_t src_mul, uint32_t src_div,
        uint32_t out_mul, uint32_t out_div) {
    uint64_t left = (uint64_t) src_mul*out_div;
    uint64_t right = (uint64_t) src_div*out_mul;
    uint64_t gcm = voclib_vout_gcm(left, right);
    if (gcm == 0)
        return 0;
    left /= gcm;
    if (left == 0)
        return 0;
    while ((left & 1) == 0) {
        left >>= 1;
    }
    return (uint32_t) left;
}


#endif /* INCLUDE_VOCLIB_VOUT_PVPLL_H_ */
